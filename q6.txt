1. The change for 'someval' inside the function does not change 'a' outside of the function because 'someval' is a local variable that holds the value of 'a', so it increments the local variable by one. So this change does not affect 'a' outside the function because the integer is unchangeable, after the function call 'a' will stay the same.
2. The change for 'someval' inside the function will change the outside value for 'b' because "someval['32]+=1 changes the value that is associated with "'32". Becasue "someval" and 'b' are a reference to the dictionary parameter, the change inside of the function affects the outside variable 'b'.
3. They differ because these two functions are both using the local variable someval but one of them is calling by reference the dictionary and its connecting the change in the function with the outside variable 'b'. In the first function it is making a change but only to the local variable and it doesn't get passed back to the outside variable 'a' so that is why it doesn't change.
